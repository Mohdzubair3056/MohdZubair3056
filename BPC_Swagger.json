{
    "openapi": "3.0.3",
    "info": {
       "title": "Mastercard RCN Registration and FundingSource Generation API",
        "version": "1.0.0",
        "description": "APIs for RCN (Real Card Number) and Funding Source generation in mastercard"
    },
    "servers": [
        {
            "url": "https://mtf.apiedge.mastercard.com/commercial",
            "description": "Sandbox Server"
        }
    ],
    "tags": [
        {
            "name": "Real Card",
            "description": "Real Card Operations - Registering a card, updating, deleting or searching registered real cards."
        },
        {
            "name": "Funding Source",
            "description": "Funding Source Operations - Creating a funding source with controls, updating, deleting or retrieving controls associated with a funding source."
        }
    ],
    "paths": {
        "/real-card-accounts": {
            "post": {
                "tags": [
                    "Real Card"
                ],
                "summary": "Registering a real card",
                "description": "This endpoint allows users to register a real card account",
                "operationId": "addRealCard",
                "requestBody": {
                    "$ref": "#/components/requestBodies/RealCardAccount"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/RealCardAccount"
                    },
                    "400": {
                        "$ref": "#/components/responses/RealCardBadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/AccountUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/AccountForbiddenError"
                    }
                }
            }
        },
        "/funding-sources": {
            "post": {
                "tags": [
                    "Funding Source"
                ],
                "summary": "Registering a funding source",
                "description": "This endpoint allows users to register a funding source",
                "operationId": "addFundingSource",
                "requestBody": {
                    "$ref": "#/components/requestBodies/FundingSource"
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/FundingSource"
                    },
                    "400": {
                        "$ref": "#/components/responses/FundingSourceBadRequestError"
                    },
                    "401": {
                        "$ref": "#/components/responses/AccountUnauthorizedError"
                    },
                    "403": {
                        "$ref": "#/components/responses/AccountForbiddenError"
                    }
                }
            }
        }
    },
    "components": {
        "examples": {
            "NewRealCardAccount": {
                "summary": "Register New Real Card Account",
                "value": {
                    "expiry": "2031-11",
                    "applicationSource": "bpc",
                    "nameOnCard": "John Doe",
                    "ownerGuid": "SENTTY13379505AC33CDA796BCBE850EADAF625FAD6B071E8D100CB1ECBEA76AD402DE1519037869",
                    "authorizationControlsEnabled": true,
                    "accountNumber": "5569507890123457042",
                    "unmaskedAccountNumber": true
                }
            },
            "ReplaceRealCardAccount": {
                "summary": "Replace Real Card Account",
                "value": {
                    "expiry": "2031-11",
                    "applicationSource": "bpc",
                    "nameOnCard": "John Doe",
                    "ownerGuid": "SENTTY98632405AC33CDA796BCBE850EADAF625FAD6B071E8D100CB1ECBEA",
                    "authorizationControlsEnabled": true,
                    "replacedAccountGuid": "0ENTeb9a0875b26b2518071f9a54f0d9a2ece17ffc43a065a64659f056faf5a621461701259037",
                    "replacedAccountReason": "LOST",
                    "accountNumber": 5234567890123457000,
                    "unmaskedAccountNumber": true
                }
            }
        },
        "schemas": {
            "RealCardAccount": {
                "description": "Real Card Account",
                "required": [
                    "nameOnCard",
                    "accountNumber",
                    "ownerGuid"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RealCardAccountDetails"
                    },
                    {
                        "type": "object",
                        "required": [
                            "nameOnCard",
                            "accountNumber",
                            "ownerGuid"
                        ],
                        "properties": {
                            "accountNumber": {
                                "maxLength": 19,
                                "minLength": 12,
                                "pattern": "^[0-9]*$",
                                "type": "string",
                                "description": "The account number. For a card account this is the associated real card number.",
                                "example": "5569507890123457042"
                            },
                            "unmaskedAccountNumber": {
                                "type": "boolean",
                                "description": "Defines if account number displayed should be unmasked.",
                                "example": true,
                                "writeOnly": true
                            }
                        }
                    }
                ]
            },
            "RealCardAccountDetails": {
                "description": "Real Card Account Details",
                "required": [
                    "nameOnCard",
                    "ownerGuid"
                ],
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RCAccountGuid"
                    },
                    {
                        "$ref": "#/components/schemas/CardAccount"
                    },
                    {
                        "type": "object",
                        "required": [
                            "nameOnCard",
                            "ownerGuid"
                        ],
                        "properties": {
                            "nameOnCard": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "pattern": ".*\\S.*",
                                "description": "Name on the card",
                                "example": "John Doe"
                            },
                            "ownerGuid": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "pattern": "^[A-Za-z0-9_=-]+$",
                                "description": "The globally unique identifier of the entity under which the card is registered. The ownerGUID is the same as the Issuer GUID or Corp GUID.",
                                "example": "SENTTY13379505AC33CDA796BCBE850EADAF625FAD6B071E8D100CB1ECBEA76AD402DE1519037869"
                            },
                            "authorizationControlsEnabled": {
                                "type": "boolean",
                                "description": "Defines if card controls should be enabled",
                                "example": true
                            },
                            "replacedAccountGuid": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "description": "The globally unique identifier of the card account that should be replaced",
                                "example": "0ENTeb9a0875b26b2518071f9a54f0d9a2ece17ffc43a065a64659f056faf5a621461701259037"
                            },
                            "replacedAccountReason": {
                                "minLength": 1,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Reason to replace the card; valid values are LOST, STOLEN, and REPLACED.",
                                "example": "LOST",
                                "pattern": "^(LOST|STOLEN|REPLACED)"
                            }
                        }
                    }
                ]
            },
            "FundingSource": {
                "required": [
                    "realCardGuid"
                ],
                "type": "object",
                "properties": {
                    "fundingSourceGuid": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "description": "The globally unique identifier for the funding source.",
                        "example": "0ENTb49a0ec199d9365c9565679c809fba51d41e25dbcfc1f3caaf548cfab10d33101701766599",
                        "readOnly": true
                    },
                    "realCardGuid": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "description": "The globally unique identifier for the real card. For card accounts realCardGuid is same as the accountGuid",
                        "example": "0ENTeb9a0875b26b2518071f9a54f0d9a2ece17ffc43a065a64659f056faf5a621461701259037"
                    },
                    "vcnCreationEnabled": {
                        "type": "boolean",
                        "description": "Defines if virtual card creation is enabled.",
                        "example": true
                    },
                    "fundingSourceAlias": {
                        "type": "string",
                        "pattern": ".*\\S.*",
                        "maxLength": 400,
                        "minLength": 1,
                        "description": "Alias for the funding source.",
                        "example": "Funding Source Alias"
                    },
                    "authorizationControlsEnabled": {
                        "type": "boolean",
                        "description": "Defines if card controls should be enabled",
                        "example": true
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Defines if the funding source is active.",
                        "example": true,
                        "readOnly": true
                    },
                    "ownerGuid": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "readOnly": true,
                        "description": "The globally unique identifier of the entity under which the card is registered. The ownerGUID is the same as the Issuer GUID or Corp GUID.",
                        "example": "SENTTY13379505AC33CDA796BCBE850EADAF625FAD6B071E8D100CB1ECBEA76AD402DE1519037869"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Date when the funding source was created",
                        "example": "2020-10-06T11:09:42.000Z",
                        "readOnly": true,
                        "format": "date-time"
                    },
                    "lastUpdateDate": {
                        "type": "string",
                        "description": "Timestamp of last update.",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2020-10-06T11:09:42.000Z"
                    },
                    "customDataGuid": {
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[A-Za-z0-9_=-]+$",
                        "type": "string",
                        "description": "The globally unique identifier for a custom data collection",
                        "example": "0ADN14dde4804a167b7ed7b21d688a70bdf8d4e58e05e11acf0b19264903330315fe1683912115"
                    }
                },
                "description": "Funding Source"
            },
            "RCAccountGuid": {
                "type": "object",
                "properties": {
                    "accountGuid": {
                        "minLength": 1,
                        "maxLength": 100,
                        "type": "string",
                        "description": "The globally unique identifier of the real card account",
                        "readOnly": true,
                        "example": "0ENTeb9a0875b26b2518071f9a54f0d9a2ece17ffc43a065a64659f056faf5a621461701259037"
                    }
                }
            },
            "CardAccount": {
                "required": [
                    "expiry"
                ],
                "properties": {
                    "expiry": {
                        "minLength": 7,
                        "maxLength": 7,
                        "type": "string",
                        "pattern": "^20[2-9][0-9]-(0[1-9]|1[012])$",
                        "description": "Card expiry date in yyyy-MM format",
                        "example": "2031-11"
                    },
                    "billingCurrency": {
                        "maxLength": 3,
                        "minLength": 3,
                        "pattern": "^[0-9]*$",
                        "type": "string",
                        "description": "Currency code as defined in ISO-4217A standard numeric code",
                        "readOnly": true,
                        "example": "826"
                    },
                    "billingCurrencyAlphabetic": {
                        "maxLength": 3,
                        "minLength": 3,
                        "pattern": "^[A-Z]+$",
                        "type": "string",
                        "description": "Alphabetic currency code as defined in ISO-4217 standard numeric code",
                        "readOnly": true,
                        "example": "GBP"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Defines if the account is active.",
                        "readOnly": true,
                        "example": true
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Date when the account was created",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2020-10-06T11:09:42.000Z"
                    },
                    "lastUpdateDate": {
                        "type": "string",
                        "description": "Timestamp of last update.",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2020-10-06T11:09:42.000Z"
                    },
                    "applicationSource": {
                        "type": "string",
                        "description": "The source application using the resource/API.",
                        "example": "bpc",
                        "pattern": "[A-Za-z0-9]+",
                        "minLength": 1,
                        "maxLength": 16
                    }
                },
                "description": "Card Account"
            },
            "ErrorWrapper": {
                "required": [
                    "Errors"
                ],
                "type": "object",
                "properties": {
                    "Errors": {
                        "$ref": "#/components/schemas/Errors"
                    }
                },
                "example": {
                    "Errors": {
                        "Error": [
                            {
                                "Source": "some-service",
                                "ReasonCode": "field.invalid",
                                "Description": "Resource GUID does not exist",
                                "Recoverable": false,
                                "Details": "resourceGuid"
                            }
                        ]
                    }
                }
            },
            "Errors": {
                "type": "object",
                "required": [
                    "Error"
                ],
                "properties": {
                    "Error": {
                        "$ref": "#/components/schemas/ErrorList"
                    }
                }
            },
            "ErrorList": {
                "type": "array",
                "minItems": 1,
                "description": "List of errors returned from server.",
                "items": {
                    "$ref": "#/components/schemas/Error"
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "Source": {
                        "description": "An element used to indicate the source of the issue causing this error.",
                        "type": "string",
                        "example": "format.invalid"
                    },
                    "ReasonCode": {
                        "description": "A reason code for the error that has occurred.",
                        "type": "string",
                        "example": "field.required"
                    },
                    "Description": {
                        "description": "Description of the reason the operation failed.",
                        "type": "string",
                        "example": "We could not handle your request"
                    },
                    "Recoverable": {
                        "description": "Generated by the gateway to indicate if the request could presented again for processing. Either 'true' or 'false'.",
                        "type": "boolean",
                        "example": false
                    },
                    "Details": {
                        "description": "Identifies the description of the error.",
                        "type": "string",
                        "example": "accountGuid is required but is missing"
                    }
                },
                "required": [
                    "Source",
                    "ReasonCode",
                    "Description",
                    "Recoverable"
                ]
            }
        },
        "headers": {
            "Real-Card-Location-Header": {
                "description": "The URL to retrieve the created resource",
                "schema": {
                    "type": "string",
                    "example": "/real-card-accounts/0ENT7118cf4b2387c6e5d32e9d9fb7bcb113f9546b7d1779132bbfa25900b0f408e81701184662"
                }
            },
            "Funding-Source-Location-Header": {
                "description": "The URL to retrieve the created resource",
                "schema": {
                    "type": "string",
                    "example": "/funding-sources/0ENTb49a0ec199d9365c9565679c809fba51d41e25dbcfc1f3caaf548cfab10d33101701766599"
                }
            }
        },
        "requestBodies": {
            "RealCardAccount": {
                "description": "Real Card to be registered.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RealCardAccount"
                        },
                        "examples": {
                            "RealCardAccountDetails": {
                                "$ref": "#/components/examples/NewRealCardAccount"
                            },
                            "ReplaceAccountGuid": {
                                "$ref": "#/components/examples/ReplaceRealCardAccount"
                            }
                        }
                    }
                },
                "required": true
            },
            "FundingSource": {
                "description": "Funding Source to be registered.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FundingSource"
                        }
                    }
                },
                "required": true
            }
        },
        "responses": {
            "RealCardBadRequestError": {
                "description": "Invalid OwnerGuid Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorWrapper"
                        },
                        "example": {
                            "Errors": {
                                "Error": [
                                    {
                                        "Source": "account-service",
                                        "ReasonCode": "field.invalid",
                                        "Description": "Owner GUID does not exist",
                                        "Recoverable": false,
                                        "Details": "ownerGuid"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "FundingSourceBadRequestError": {
                "description": "Invalid Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorWrapper"
                        },
                        "example": {
                            "Errors": {
                                "Error": [
                                    {
                                        "Source": "account-service",
                                        "ReasonCode": "field.unrecognized",
                                        "Description": "Field name is incorrect",
                                        "Recoverable": false,
                                        "Details": "foo"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "AccountUnauthorizedError": {
                "description": "Authentication Required",
                "headers": {
                    "WWW-Authenticate": {
                        "description": "Method of authentication",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorWrapper"
                        },
                        "example": {
                            "Errors": {
                                "Error": [
                                    {
                                        "Source": "account-service",
                                        "ReasonCode": "user.authentication.absent",
                                        "Description": "No authentication data was found for the user",
                                        "Recoverable": false
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "AccountForbiddenError": {
                "description": "Not Authorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorWrapper"
                        },
                        "example": {
                            "Errors": {
                                "Error": [
                                    {
                                        "Source": "account-service",
                                        "ReasonCode": "user.authorization.missing",
                                        "Description": "No authorization data was found for the user or their session",
                                        "Recoverable": false
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "RealCardAccount": {
                "description": "Real Card Account",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Real-Card-Location-Header"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RealCardAccount"
                        },
                        "example": {
                            "accountGuid": "0ENT7118cf4b2387c6e5d32e9d9fb7bcb113f9546b7d1779132bbfa25900b0f408e81701184662",
                            "expiry": "2031-11",
                            "active": true,
                            "createdDate": "2023-11-28T15:17:42.920Z",
                            "lastUpdateDate": "2023-11-28T15:17:42.920Z",
                            "applicationSource": "bpc",
                            "nameOnCard": "John Doe",
                            "ownerGuid": "SENTTY13379505AC33CDA796BCBE850EADAF625FAD6B071E8D100CB1ECBEA76AD402DE1519037869",
                            "authorizationControlsEnabled": true,
                            "accountNumber": "5569507890123457042"
                        }
                    }
                }
            },
            "FundingSource": {
                "description": "Funding Source",
                "headers": {
                    "Location": {
                        "$ref": "#/components/headers/Funding-Source-Location-Header"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FundingSource"
                        }
                    }
                }
            }
        }
    }
}
